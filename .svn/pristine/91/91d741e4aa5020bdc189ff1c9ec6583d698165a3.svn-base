/*package com.vsoftcorp.kls.dataccess.impl;import java.math.BigInteger;import java.sql.Date;import java.text.SimpleDateFormat;import org.apache.log4j.Logger;import org.dbunit.Assertion;import org.dbunit.dataset.IDataSet;import org.dbunit.dataset.ITable;import org.dbunit.dataset.SortedTable;import org.dbunit.dataset.filter.DefaultColumnFilter;import org.junit.AfterClass;import org.junit.Assert;import org.junit.BeforeClass;import org.junit.Test;import com.vsoftcorp.dbunit.DBUnitTC;import com.vsoftcorp.kls.business.entities.Branch;import com.vsoftcorp.kls.business.entities.District;import com.vsoftcorp.kls.business.entities.Pacs;import com.vsoftcorp.kls.business.entities.PacsGl;import com.vsoftcorp.kls.business.entities.Taluka;import com.vsoftcorp.kls.business.entities.Village;import com.vsoftcorp.kls.dataaccess.IBranchDAO;import com.vsoftcorp.kls.dataaccess.IPacsDAO;import com.vsoftcorp.kls.dataaccess.IPacsGlDAO;import com.vsoftcorp.kls.dataaccess.factory.KLSDataAccessFactory;import com.vsoftcorp.kls.util.EntityManagerUtil;public class PacsGlDAOTest extends DBUnitTC {	private static final Logger logger = Logger			.getLogger(PacsGlDAOTest.class);	public PacsGlDAOTest() {		super("dbunit.properties");	}	@BeforeClass	public static void setupHibernate() {		EntityManagerUtil.init("klsTestPU");	}	@AfterClass	public static void teardownHibernate() {		logger.info("After Class Teardown shutdown");		EntityManagerUtil.closeSession();	}	@Test	public void testSavePacsGl() {		logger.info("Executing the test case testSavePacsGl()");		try {			PacsGl glMaster = new PacsGl();									Branch branch = new Branch();			branch.setCode("OR03");			branch.setName("Cuttack");			branch.setLocation("Patnaik Nagar");						IBranchDAO bDao = KLSDataAccessFactory.getBranchDAO();			bDao.saveBranch(branch);									District district=new District();			district.setDccBankCode("HYD1");			district.setName("RangaReddy");			KLSDataAccessFactory.getDistrictDAO().saveDistrict(district);						Taluka taluka=new Taluka();			taluka.setName("AmeerPet");			taluka.setDistrict(district);			KLSDataAccessFactory.getTalukaDAO().saveTaluka(taluka);						Village village=new Village();			village.setName("SR nagar");			village.setPin(500034);			village.setTaluka(taluka);						KLSDataAccessFactory.getVillageDAO().saveVillage(village);			Pacs pacs = new Pacs();						pacs.setName("PAC");			pacs.setLocation("HYD");			pacs.setSecretaryName("AAA");			pacs.setBranch(branch);			pacs.setVillage(village);									IPacsDAO pacsDao = KLSDataAccessFactory.getPacsDAO();			pacsDao.savePacs(pacs);						glMaster.setName("new11");			glMaster.setType("E");			glMaster.setPacs(pacs);			glMaster.setGlCode("000000000001");			glMaster.setEnteredBy("kls1");			SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");			sdf1.setLenient(false);							java.util.Date date = sdf1.parse("2014-08-07 00:00:00");				glMaster.setEnteredDate(new Date(date.getTime()));							IPacsGlDAO dao = KLSDataAccessFactory.getPacsGlDAO();			dao.savePacsGl(glMaster);			IDataSet actualDataSet1 = getConnection().createDataSet();			IDataSet expectedDataSet1 = getExpectedDataSet();			ITable expected1 = null;			ITable actual1 = null;			expected1 = new SortedTable(					expectedDataSet1.getTable("pacs_gl"));			actual1 = actualDataSet1.getTable("pacs_gl");			actual1 = new SortedTable(DefaultColumnFilter.includedColumnsTable(					actual1, expected1.getTableMetaData().getColumns()),					expected1.getTableMetaData());			Assertion.assertEquals(expected1, actual1);			Assert.assertEquals(expected1.getValue(0, "name"), actual1.getValue(0, "name"));		} catch (Exception e) {			e.printStackTrace();			throw new RuntimeException(					"Exception thrown while running the testSavePacsGl() dbunit test case.",					e.getCause());		}		logger.info("Executed the test case testSavePacsGl()");	}		@Test	public void testGetPacsGl() {		logger.info("Start: Fetching the gl master data from the database in getPacsGl() method.");				try {			PacsGl theGlMaster = new PacsGl();			Long l = new Long(101);			//pacsGl.setId(l);			theGlMaster.setId(l);			IPacsGlDAO dao = KLSDataAccessFactory.getPacsGlDAO();			logger.info("factory dao instace" + dao);			PacsGl c = dao.getPacsGl(theGlMaster,true);			Assert.assertEquals("PACSGL", c.getName().trim());		} catch (Exception e) {			e.printStackTrace();			logger.error("Exception while excecuting the dbuint testGetPacsGl : "+ e.getMessage());				}			}			@Test	public void testUpdatePacsGl() {		logger.info("Executing the db unit test case testUpdatePacsGl()");		try {					PacsGl pacsGl = new PacsGl();			pacsGl.setName("new123");			pacsGl.setType("E");			pacsGl.setGlCode("000000000001");			pacsGl.setEnteredBy("kls1");			SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");			sdf1.setLenient(false);							java.util.Date date = sdf1.parse("2014-08-07 00:00:00");				pacsGl.setEnteredDate(new Date(date.getTime()));									Branch branch = new Branch();			branch.setCode("OR03");			branch.setName("Cuttack");			branch.setLocation("Patnaik Nagar");									District district=new District();			district.setDccBankCode("TS1");			district.setName("Hyderabad");						Taluka taluka=new Taluka();			taluka.setName("ABC");						Village village=new Village();			village.setName("HYDERABAD");			village.setPin(500034);			Pacs pacs = new Pacs();						pacs.setName("PAC");			pacs.setLocation("HYD");			pacs.setSecretaryName("AAA");			//pacs.setBranch(branch);						IPacsGlDAO dao = KLSDataAccessFactory.getPacsGlDAO();			IDataSet actualDataSet = getConnection().createDataSet();			IDataSet actualDataSet1 = getConnection().createDataSet();			IDataSet expectedDataSet1 = getExpectedDataSet();			ITable expected1 = null;			ITable actual = null;			ITable actual1 = null;						actual = actualDataSet.getTable("branch");			Integer branchId = (Integer) actual.getValue(0, "id");			branch.setId(branchId);						pacs.setBranch(branch);									actual = actualDataSet.getTable("district");			Integer districtId = (Integer) actual.getValue(0, "id");			district.setId(districtId);						actual = actualDataSet.getTable("taluka");			Integer talukaId = (Integer) actual.getValue(0, "id");			taluka.setId(talukaId);						actual = actualDataSet.getTable("village");			Integer villageId = (Integer) actual.getValue(0, "id");			village.setId(villageId);						taluka.setDistrict(district);			village.setTaluka(taluka);			pacs.setVillage(village);									actual = actualDataSet.getTable("pacs");			expected1 = new SortedTable(expectedDataSet1.getTable("pacs_gl"));			Integer pacsId = (Integer) actual.getValue(0, "id");			pacs.setId(pacsId);						pacsGl.setPacs(pacs);								actual1 = actualDataSet1.getTable("pacs_gl");			BigInteger pGlId = (BigInteger)actual1.getValue(0, "id");			Long l = pGlId.longValue();			pacsGl.setId(l);			actual1 = new SortedTable(DefaultColumnFilter.includedColumnsTable(					actual1, expected1.getTableMetaData().getColumns()),					expected1.getTableMetaData());			dao.updatePacsGl(pacsGl);			actual1 = actualDataSet1.getTable("pacs_gl");			Assert.assertEquals(expected1.getValue(0, "name"),					actual1.getValue(0, "name"));				} catch (Exception e) {			e.printStackTrace();			throw new RuntimeException(					"Exception thrown while running the testUpdatePacsGl() dbunit test case.",					e.getCause());			}		logger.info("Executed the db unit test case testUpdatePacsGl()");	}		}*/