/*package com.vsoftcorp.kls.dataccess.impl;import org.apache.log4j.Logger;import org.dbunit.dataset.IDataSet;import org.dbunit.dataset.ITable;import org.dbunit.dataset.SortedTable;import org.dbunit.dataset.filter.DefaultColumnFilter;import org.junit.AfterClass;import org.junit.Assert;import org.junit.BeforeClass;import org.junit.Test;import com.vsoftcorp.dbunit.DBUnitTC;import com.vsoftcorp.kls.business.entities.Branch;import com.vsoftcorp.kls.business.entities.District;import com.vsoftcorp.kls.business.entities.Pacs;import com.vsoftcorp.kls.business.entities.Taluka;import com.vsoftcorp.kls.business.entities.Village;import com.vsoftcorp.kls.dataaccess.IPacsDAO;import com.vsoftcorp.kls.dataaccess.factory.KLSDataAccessFactory;import com.vsoftcorp.kls.util.EntityManagerUtil;public class PacsMasterDAOTest extends DBUnitTC {	private static final Logger logger = Logger			.getLogger(PacsMasterDAOTest.class);	public PacsMasterDAOTest() {		super("dbunit.properties");	}	@BeforeClass	public static void setupHibernate() {		EntityManagerUtil.init("klsTestPU");	}	@AfterClass	public static void teardownHibernate() {		logger.info("After Class Teardown shutdown");		// EntityManagerUtil.closeSession();	}	@Test	public void testSavePacs() {		logger.info("Executing the test case savePacs()");		try {			Pacs pacsMaster = new Pacs();			Branch branch = new Branch();			branch.setName("Cuttack");			branch.setLocation("Patnaik Nagar");			branch.setCode("OR01");			IBranchDAO branchDao = KLSDataAccessFactory.getBranchDAO();			District district=new District();			district.setDccBankCode("HYD1");			district.setName("RangaReddy");			KLSDataAccessFactory.getDistrictDAO().saveDistrict(district);						Taluka taluka=new Taluka();			taluka.setName("AmeerPet");			taluka.setDistrict(district);			KLSDataAccessFactory.getTalukaDAO().saveTaluka(taluka);						Village village=new Village();			village.setName("SR nagar");			village.setPin(500034);			village.setTaluka(taluka);						KLSDataAccessFactory.getVillageDAO().saveVillage(village);									branchDao.saveBranch(branch);			pacsMaster.setBranch(branch);			pacsMaster.setVillage(village);			pacsMaster.setName("PAC");			pacsMaster.setLocation("hyderabad");			pacsMaster.setSecretaryName("nelson");			pacsMaster.setPacsBankAccNumber("00012221111122223333");			IPacsDAO dao = KLSDataAccessFactory.getPacsDAO();			dao.savePacs(pacsMaster);			IDataSet actualDataSet1 = getConnection().createDataSet();			IDataSet expectedDataSet1 = getExpectedDataSet();			ITable expected1 = null;			ITable actual1 = null;			expected1 = new SortedTable(					expectedDataSet1.getTable("pacs"));			actual1 = actualDataSet1.getTable("pacs");			actual1 = new SortedTable(DefaultColumnFilter.includedColumnsTable(					actual1, expected1.getTableMetaData().getColumns()),					expected1.getTableMetaData());			Assertion.assertEquals(expected1, actual1);			Assert.assertEquals(expected1.getRowCount(), actual1.getRowCount());			Assert.assertEquals(expected1.getValue(0, "name"),					actual1.getValue(0, "name"));		} catch (Exception e) {			throw new RuntimeException(					"Exception thrown while running the testSavePacs() dbunit test case.",					e.getCause());		}		logger.info("Executed the test case savePacs()");	}	@Test	public void testUpdatePacs() {		logger.info("Executing the db unit test case updatePacs()");		try {			Pacs pac = new Pacs();			pac.setName("PACNAME");			pac.setLocation("hyderabad");			pac.setSecretaryName("nelson");						Branch branch = new Branch();			branch.setName("Cuttack");			branch.setLocation("Patnaik Nagar");			branch.setCode("OR01");									District district=new District();			district.setDccBankCode("TS1");			district.setName("Hyderabad");						Taluka taluka=new Taluka();			taluka.setName("ABC");						Village village=new Village();			village.setName("HYDERABAD");			village.setPin(500034);						IPacsDAO dao = KLSDataAccessFactory.getPacsDAO();			IDataSet actualDataSet = getConnection().createDataSet();			IDataSet actualDataSet1 = getConnection().createDataSet();			IDataSet expectedDataSet1 = getExpectedDataSet();			ITable expected1 = null;			ITable actual = null;			ITable actual1 = null;			actual = actualDataSet.getTable("branch");			expected1 = new SortedTable(expectedDataSet1.getTable("pacs"));			Integer branchId = (Integer) actual.getValue(0, "id");			branch.setId(branchId);			pac.setBranch(branch);									actual = actualDataSet.getTable("district");			Integer districtId = (Integer) actual.getValue(0, "id");			district.setId(districtId);						actual = actualDataSet.getTable("taluka");			Integer talukaId = (Integer) actual.getValue(0, "id");			taluka.setId(talukaId);						actual = actualDataSet.getTable("village");			Integer villageId = (Integer) actual.getValue(0, "id");			village.setId(villageId);						taluka.setDistrict(district);			village.setTaluka(taluka);			pac.setVillage(village);			pac.setPacsBankAccNumber("00012221111122223333");						actual1 = actualDataSet1.getTable("pacs");			Integer pacId = (Integer) actual1.getValue(0, "id");			pac.setId(pacId);			actual1 = new SortedTable(DefaultColumnFilter.includedColumnsTable(					actual1, expected1.getTableMetaData().getColumns()),					expected1.getTableMetaData());			dao.updatePacs(pac);			actual1 = actualDataSet1.getTable("pacs");			Assert.assertEquals(expected1.getValue(0, "name"),					actual1.getValue(0, "name"));						} catch (Exception e) {			e.printStackTrace();			throw new RuntimeException(					"Exception thrown while running the testUpdatePacs() dbunit test case.",					e.getCause());		}		logger.info("Executed the db unit test case updatePacs()");	}		@Test	public void testGetPacs() {		try {			Pacs pac = new Pacs();			pac.setId(50);			IPacsDAO dao = KLSDataAccessFactory.getPacsDAO();			logger.info("factory dao instace" + dao);			Pacs c = dao.getPacs(pac);			Assert.assertEquals("PAC", c.getName().trim());		} catch (Exception e) {			logger.error("Exception while excecuting the dbuint testGetPacs : "					+ e.getMessage());			throw new RuntimeException(					"Exception thrown while running the testGetPacs() dbunit test case.",					e.getCause());		}	}}*/